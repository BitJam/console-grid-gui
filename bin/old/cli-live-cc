#!/bin/bash

LIB_DIR=/usr/lib/shell
loc_lib=./lib
test -e $loc_lib/lib-screen.sh && LIB_DIR=$loc_lib
. $LIB_DIR/lib-menu.sh


main() {
    #grid_color_scheme light

    screen_set title1=$"antiX Live Control Centre"
    screen_set box=-s border=1
    set_title_2

    init

    hide_tty
    clear
    redraw
    main_loop
}

init() {
    screen_init
    grid_read_new antix_live "$(make_menu)"
    grid_narrow y=3 title=$"antiX Live Actions"
    grid_set xgap=3
    grid_center_x
    grid_fill_y 15
    grid_finalize
}

antix_live_on_enter() {
    local name=$1 sel=$3
    cmd=$(echo "$name" | cut -d: -f1)

    exit_to_main "$cmd"

    case $cmd in
             live-usb-maker) run_cmd -s  $cmd --pause ;;
        live-kernel-updater) run_cmd -s  $cmd --pause ;;
              live-remaster) run_cmd -sp $cmd --cli   ;;    
               persist_save) run_cmd -sp $cmd --cli   ;;
             persist-makefs) run_cmd -sp $cmd --cli   ;;
             persist-config) run_cmd -sp $cmd --cli   ;;
                          *)  db_msg "Would do action %s" "$white$cmd"
    esac
    return
}

make_menu() {
    start_menu_list
    add_cmd "live-usb-maker"       "Make a live-usb"
    add_cmd "live-kernel-updater"  "Update live kernel"
    add_cmd "live-remaster"        "Remaster live system"
    add_cmd "persist_save"         "Save dynamic root persistence"
    add_cmd "persist-makefs"       "Configure dynamic root persistence"
    add_cmd "persist-config"       "Create live persistence files"
    end_menu_list
    return_to_main_entry
}

DEBUG=true
[ "$DEBUG" = "true" ] || log_file=/dev/null

main "$@" 2>> $log_file



