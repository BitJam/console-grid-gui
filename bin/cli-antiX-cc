#!/bin/bash

LIB_DIR=/usr/lib/shell
loc_lib=./lib
test -e $loc_lib/lib-screen.sh && LIB_DIR=$loc_lib
. $LIB_DIR/lib-menu.sh

PATH=./bin:$PATH

main() {
    set_color_scheme light

    clear
    #echo  -n "${cyan}Please wait while $ME examines your system ..."

    local start_t=$(get_time)

    screen_set title1=$"antiX Command-Line Control Centre"
    screen_set title2=$"Press: <Enter> to select an option, <b> back to main, <q> to quit, <h> for help"
    screen_set title3=$"$(distro_version)"

    screen_set box=-s border=1

    start_menu_list

    init

    local start_str="init took: $(delta_time $start_t) seconds"
    log "$start_str"

    hide_tty
    clear
    redraw
    db_msg "$start_str"
    main_loop
}

init() {
    screen_init
    re_init
    select_menu main_cc
}

re_init() {
    new_menu   main_cc  $"Main Menu"                make_main_menu
    new_menu   live_cc  $"antiX Live Commands"      make_live_menu
    new_menu     av_cc  $"Audio/Visual Commands"    make_av_menu
    new_menu    sys_cc  $"System Commands"          make_sys_menu
    new_menu   util_cc  $"Console Utilities"        make_util_menu
    new_menu    net_cc  $"Internet Applications"    make_net_menu
    new_menu    off_cc  $"Office Applications"      make_off_menu
    new_menu config_cc  $"Configuration Files"      make_config_menu
    new_menu logout_cc  $"Logout and Installer"     make_logout_menu

}

key_callback() {
    local key=$1
    case $key in

        [mM]) db_msg "Main selection: $MAIN_CC_SEL"     ;;
        [bB]) under_main_cc && select_menu $PARENT_MENU ;;

           q) in_main_cc && clear && exit
              select_menu $PARENT_MENU $MAIN_CC_SEL     ;;

           *) return 1;;
    esac
    return 0
}

make_main_menu() {
    entry $"Audio/Visual menu"
    entry $"Internet Tools & Apps"
    entry $"System Tools"
    entry $"Configuration Files"
    entry $"Live System Centre"
    entry $"Console Utilities"
    entry $"Office and Other"
    entry $"Logout / Install"
    entry "$(printf "$yellow%s$nc_co" $"Quit")"
}

main_cc_on_enter() {
    local name=$1 sel=$3

    MAIN_CC_SEL=$sel

    case $name in
           $"Audio/Visual menu") select_menu av_cc           ;;
       $"Internet Tools & Apps") select_menu net_cc          ;;
                $"System Tools") select_menu sys_cc          ;;
         $"Configuration Files") select_menu config_cc       ;;
          $"Live System Centre") select_menu live_cc         ;;
           $"Console Utilities") select_menu util_cc         ;;
            $"Office and Other") select_menu off_cc          ;;
            $"Logout / Install") select_menu logout_cc       ;;

      *) db_msg $"Would do action %s" "$white$name" ; return ;;
    esac

    clear
    printf $cursor_off
    redraw
    return
}


make_logout_menu() {
    start_menu_list

    add_cmd 'cli-installer'     $"Install this distro on a hard drive"
    add_cmd 'reboot'            $"Reboot the system"
    add_cmd 'poweroff'          $"Powerdown the system"

    end_menu_list
    back_to_main_entry
}

logout_cc_on_enter() {
    local name=$1 sel=$3

    case $name in
                installer) run_cmd -spc cli-installer  ;;
                   reboot) run_cmd -spce reboot        ;;
                 poweroff) run_cmd -spce poweroff      ;;

        *) db_msg "Would do action %s" "$white$name" ; return ;;
    esac
}

make_av_menu() {
    start_menu_list

    add_cmd 'speaker-test'             $"See if sound is working"
    add_cmd 'alsa-set-default-card'    $"Select which sound card to use"
    add_cmd 'alsamixer'                $"simple sound mixer"
    add_cmd 'mocp'                     $"Audio Player"
    # add_cmd $"mpv"                      "Video Player"
    add_cmd $"pmrp"                     "Poor Man's Radio Player"
    # add_cmd $"burniso"                  "cd/dvd burner"
    add_cmd 'cdw'                      $"cd/dvd/burner"

    end_menu_list
    back_to_main_entry
}

av_cc_cmd() {
    local cmd=$1
    case $cmd in
                 speaker-test) run_cmd     $cmd -c 2 -t wav -l 2 ;;
        alsa-set-default-card) run_cmd  -p $cmd --cli   ;;
                    alsamixer) run_cmd     $cmd         ;;
                         mocp) run_cmd     $cmd         ;;
                          mpv) run_cmd     $cmd         ;;
                         pmrp) run_cmd     $cmd         ;;
                      burniso) run_cmd     $cmd         ;;
                          cdw) run_cmd     $cmd         ;;

        *)  db_msg "Would do action %s" "$white$cmd"
    esac
    return
}

make_sys_menu() {
    start_menu_list
    add_cmd 'cli-package-installer' $"Install new packages (like Synaptic)"
    add_cmd 'testdisk'       $"Check and undelete disk partitions"
    add_cmd 'sysv-rc-conf'   $"Choose Startup Services"
    add_cmd 'tzdata'         $"Set Date and Time"  dpkg-reconfigure
    add_cmd 'guess-hwclock'  $"Be prompted to setup the time correctly"
    add_cmd 'htop'           $"Show real-time system status"
    add_cmd 'inxi'           $"Hardware and OS formation"
    add_cmd 'env-info'       $"Other system Information"
    add_cmd 'ps_mem.py'      $"Show memory usage"
    add_cmd 'df'             $"Information about mounted partitions"
    add_cmd 'lsblk'          $"List all block (disk) partitions"
    add_cmd 'lsmod'          $"List currently installed kernel modules"
    add_cmd 'lspci'          $"List major system components"
    add_cmd 'lsusb'          $"List attached USB devices"
    add_cmd 'dmesg'          $"Display messages from the kernel"

    end_menu_list
    back_to_main_entry
}

sys_cc_cmd() {
    local cmd=$1
    case $cmd in
    cli-package-installer)  run_cmd -s  $cmd                     ;;
                 testdisk)  run_cmd -s  $cmd                     ;;
             sysv-rc-conf)  run_cmd -s  $cmd                     ;;
                   tzdata)  run_cmd -s  dpkg-reconfigure  $cmd   ;;
            guess-hwclock)  run_cmd -s  $cmd                     ;;
                     htop)  run_cmd     $cmd                     ;;
                     inxi)  run_cmd -p  $cmd -Fx -c24            ;;
                 env-info)  run_cmd -p  $cmd                     ;;
                ps_mem.py)  run_cmd -ps $cmd                     ;;
                       df)  run_cmd -p  $cmd -hTP                ;;
                    lsblk) view_cmd -s  $cmd -o name,size,fstype,label,uuid ;;
                    lsmod) view_cmd     $cmd                     ;;
                    lspci) view_cmd     $cmd                     ;;
                    lsusb) view_cmd     $cmd                     ;;
                    dmesg) view_cmd     $cmd  --color=always --ctime  ;;
        *)  db_msg "Would do action %s" "$white$cmd"
    esac
    return
}

make_live_menu() {
    start_menu_list
    add_cmd 'live-usb-maker'       $"Make a live-usb"
    add_cmd 'live-kernel-updater'  $"Update live kernel"
    add_cmd 'live-remaster'        $"Remaster live system"
    add_cmd 'persist_save'         $"Save dynamic root persistence"
    add_cmd 'persist-makefs'       $"Configure dynamic root persistence"
    add_cmd 'persist-config'       $"Create live persistence files"
    end_menu_list
    back_to_main_entry
}

live_cc_cmd() {
    local cmd=$1
    case $cmd in
             live-usb-maker) run_cmd -s  $cmd --pause ;;
        live-kernel-updater) run_cmd -s  $cmd --pause ;;
              live-remaster) run_cmd -sp $cmd --cli   ;;
               persist_save) run_cmd -sp $cmd --cli   ;;
             persist-makefs) run_cmd -sp $cmd --cli   ;;
             persist-config) run_cmd -sp $cmd --cli   ;;
                          *)  db_msg "Would do action %s" "$white$cmd"
    esac
}

make_util_menu() {
    start_menu_list

    have_backlight \
        && add_cmd "backlight-brightness"  "Adjust the brightness of the backlight"

    add_cmd 'splash-select'         $"Choose the console background"
    add_cmd 'console-font-select'   $"Choose the console font"
    add_cmd 'console-width-select'  $"Choose the console font"
    add_cmd 'choose-console-width'  $"Choose the console font"
    add_cmd '/etc/live/bin/space-evaders'  $"Arcade type game"

    end_menu_list
    back_to_main_entry
}

util_cc_cmd() {
    local cmd=$1
    case $cmd in
       backlight-brightness) run_cmd     $cmd                        ;;
              splash-select) run_cmd     $cmd                        ;;
        console-font-select) run_cmd -r  $cmd                        ;;
       console-width-select) run_cmd -sr $cmd                        ;;
       choose-console-width) run_cmd -sr $cmd                        ;;
              space-evaders) run_cmd     /etc/live/bin/space-evaders ;;
                          X) run_cmd     $cmd                        ;;

        *)  db_msg "Would do action %s" "$white$cmd"
    esac
}

make_net_menu() {
    start_menu_list

    add_cmd 'ceni'         $"Setup wireless"
    add_cmd 'ifconfig'     $"Show network status"
    add_cmd 'ping'         $"Test if network is connected"
    add_cmd 'netstat'      $"Show all network connections and ports"
    add_cmd 'netpro'       $"Manage network profiles"
    add_cmd 'elinks'       $"Web browser"
    add_cmd 'links2'       $"Web browser"
    add_cmd 'irrsi'        $"Chat client"
    add_cmd 'newsbeuter'   $"RSS/Atom feed reader"
    add_cmd 'rtorrent'     $"Bittorrent client"

    end_menu_list
    back_to_main_entry
}

net_cc_cmd() {
    local cmd=$1
    case $cmd in
               ping) run_cmd -p  $cmd -c4 -W2 8.8.8.8 ;;
           ifconfig) run_cmd -p  $cmd                 ;;
             nestat) run_cmd -ps $cmd -autp           ;;
               ceni) run_cmd -s  $cmd                 ;;
        wicd-curses) run_cmd -s  $cmd                 ;;
             netpro) run_cmd -s  $cmd                 ;;
             elinks) run_cmd     $cmd                 ;;
             links2) run_cmd     $cmd                 ;;
              irrsi) run_cmd     $cmd                 ;;
         newsbeuter) run_cmd     $cmd                 ;;
           rtorrent) run_cmd     $cmd                 ;;

        *)  db_msg "Would do action %s" "$white$cmd"
    esac
}

make_off_menu() {
    start_menu_list

    add_cmd 'mc'            $"Midnight commander file manager"
    add_cmd 'wordgrinder'   $"Word Processor"
    add_cmd 'calcurse'      $"Calendar/Schedule"
    add_cmd 'nano'          $"Simple text editor"
    add_cmd 'vim'           $"Advanced text editor"

    end_menu_list
    back_to_main_entry
}

off_cc_cmd() {
    local cmd=$1
    case $cmd in
                     mc) run_cmd  $cmd    ;;
            wordgrinder) run_cmd  $cmd    ;;
               calcurse) run_cmd  $cmd    ;;
                   nano) run_cmd  $cmd    ;;
                    vim) run_cmd  $cmd    ;;
               *)  db_msg "Would do action %s" "$white$cmd"
    esac
}

make_config_menu() {
    start_menu_list
    add_edit $"File system table"               /etc/fstab
    add_edit $"X Windows Configuration"         /etc/X11/xorg.conf
    add_edit $"SLiM Graphical login manager"    /etc/slim.conf
    add_edit $"Installed bootloader"            /boot/grub.menu.lst
    add_edit $"Live usb BIOS bootloader"        /live/boot-dev/boot/syslinux/syslinux.cfg
    add_edit $"Live usb UEFI bootloader"        /live/boot-dev/boot/grub/grub.cfg
    add_edit $"Remaster Exclude List"           /usr/local/share/excludes/general-remaster-exclude.list
    add_edit $"Snapshot Exclude List"           /usr/local/share/excludes/iso-snapshot-exclude.list
    add_edit $"Remaster Exclude List 2"         /usr/local/share/excludes/live-remaster-exclude.list
    add_edit $"Persist Save Exclude List"       /usr/local/share/excludes/persist-save-exclude.list
    add_view $"X Server Log File"               /var/log/Xorg.0.log
    add_view $"Live Boot Log File"              /var/log/live/initrd.log.color

    end_menu_list
    back_to_main_entry
}

config_cc_cmd() {
    local cmd=$1
    case $cmd in

        general-remaster-exclude.list) edit_file -s /usr/local/share/excludes/general-remaster-exclude.list  ;;
            iso-snapshot-exclude.list) edit_file -s /usr/local/share/excludes/iso-snapshot-exclude.list      ;;
           live-remaster-exclude.list) edit_file -s /usr/local/share/excludes/live-remaster-exclude.list     ;;
            persist-save-exclude.list) edit_file -s /usr/local/share/excludes/persist-save-exclude.list      ;;

               fstab) edit_file -s /etc/fstab ;;
           xorg.conf) edit_file -s /etc/xorg.conf ;;
           slim.conf) edit_file -s /etc/slim.conf ;;
           menu.list) edit_file -s /boot/grub/menu.lst ;;
        syslinux.cfg) edit_file -s /live/boot-dev/boot/syslinux/syslinux.cfg ;;
            grub.cfg) edit_file -s /live/boot-dev/boot/grub/grub.cfg ;;

                  Xorg.0.log) view_file /var/log/Xorg.0.log ;;
            initrd.log.color) view_file /var/log/live/initrd.log.color ;;

               *)  db_msg "Would do action %s" "$white$cmd"
    esac
}

have_backlight() {
    local f
    for f in /sys/class/backlight/*/brightness; do
        test -e $f && return 0
    done
    return 1
}

HELP_PAGE=$ME

[ "$DEBUG" ] || log_file=/dev/null

main "$@" 2>> $log_file



