#!/bin/bash

# Codesets on Debian
#
#  CyrAsia    Greek    Lat7
#  CyrKoi     Lat15    Uni2
#  CyrSlav    Lat2     Uni3

lib_dir=/usr/lib/shell
loc_lib=./lib
test -e $loc_lib/lib-screen.sh && lib_dir=$loc_lib
. $lib_dir/lib-screen.sh
. $lib_dir/lib-grid.sh

main() {

    [ ${#CODESET} -eq 0 ] && CODESET=$(lang_to_codeset $LANG)
    FONT_MENU="$(read_console_fonts)"
    [ ${#FONT_MENU} -eq 0 ] && fatal "No fonts found"

    set_color_scheme light

    screen_set title1="Select a Console Font"
    screen_set title2="Press: <Enter> to select a font <q> to quit, <h> for help"
    screen_set border=0

    init

    grid_center_labels

    hide_tty
    clear
    redraw
    main_loop
}

init() {
    screen_init
    grid_read_new console_font "$FONT_MENU"
    grid_large y=3 title="$CODESET Console Fonts"
    grid_fill_y 50
    grid_finalize
}

redraw() {
    screen_draw
    grid_activate
}

restart() {
    local save_sel=$GRID_SEL
    local save_def=$GRID_DEFAULT_SEL
    init
    GRID_SEL=$save_sel
    GRID_DEFAULT_SEL=$save_def
    clear
    redraw
}

key_callback() {
    local key=$1
    [ "$key" = "t" ] || return 1
    clear

    echo -n $cyan
    showconsolefont -i
    echo -n $nc
    showconsolefont
    echo

    echo "$cyan Press any key to continue$nc"

    read -s -n1 xxx
    clear
    redraw
    return 0
}


console_font_on_enter() {
    local font=$1  sel=$3
    local full=$(expand_font "$font")

    GRID_DEFAULT_SEL=$sel
    if [ -z "$SCREEN_IN_VT" ]; then
        grid_activate
        db_msg "Would set font to %s" "$white$full"
        return
    fi

    local term=$(fgconsole)

    setfont $full
    log "term=$term  font=$full"
    clear

    restart
}

read_console_fonts() {
    local dir=/usr/share/consolefonts

    local file font
    for file in $(ls $dir | sed "s/VGA8/VGA08/" | sort); do
        case $file in
            $CODESET-TerminusBold[0-9]*) font="Bold-${file#$CODESET-TerminusBold}"    ;;
                $CODESET-Terminus[0-9]*) font="${file#$CODESET-Terminus}"             ;;
         $CODESET-TerminusBoldVGA[0-9]*) font="BVGA-${file#$CODESET-TerminusBoldVGA}" ;;
                   $CODESET-Fixed[0-9]*) font="Fixed-${file#$CODESET-Fixed}"          ;;
                     $CODESET-VGA[0-9]*) font="VGA-${file#$CODESET-VGA}"              ;;
                                      *) continue                                     ;;
        esac
        font=${font%%.*}
        font=${font%x6}
        font=${font%x[1-4][0-9]}

        case $font in
            [1-4]*|Bold-[1-4]*) echo "$font" ; continue ;;
        esac

        [ ${#T_ONLY} -eq 0 ] && echo "$font"
    done
}

expand_font() {
    local font=$1
    local name=Terminus  size=${font#*-}
    case $font in
           Bold*) name=${name}Bold    ;;
           BVGA*) name=${name}BoldVGA ;;
          Fixed*) name=Fixed          ;;
            VGA*) name=VGA            ;;
               *)                     ;;
    esac
    case $size in
        08) size=8     ;;
        12) size=12x6  ;;
        20) size=20x10 ;;
        22) size=22x11 ;;
        24) size=24x12 ;;
        28) size=28x14 ; [ "$name" = "VGA" ] && size=28x16 ;;
        32) size=32x16 ;;
    esac

    echo "$CODESET-$name$size"
}

fatal() {
    local fmt=$1 ; shift
    printf "Error: $fmt\n" "$@"
    exit 7
}

lang_to_codeset() {
    local lang=$1
    case ${lang%%_*} in
                     kk|ky|tj) echo CyrAsia  ;;
                        ru|uk) echo CyrKoi   ;;
                  bg|mk|ru|sr) echo CyrSlav  ;;
      bs|hr|cs|hu|pl|ro|sk|sl) echo Lat2     ;;
        af|sq|ast|da|nl|et|fr) echo Lat15    ;;
    "fi"|de|is|id|pt|es|sv|tr) echo Lat15    ;;
                        lt|lv) echo Lat7     ;;
                           el) echo Greek    ;;
                            *) echo Uni2     ;;
    esac
}

my_dir=$(readlink -f "$(dirname "$0")")

HELP_PAGE=console-font-select

[ "$DEBUG" ] || log_file=/dev/null

main "$@" 2>> $log_file



